cube-specific subclass of macro database
    superclass now does not have macros or costs, just patterns and wildcards
    include permutation resulting from each macro, use it to apply rules quickly
    init function that automatically starts with tame solved state, and automatically sets bounds
profile full ftb again with prefix db
new ftw:
    try multiple trails from each fork-point, including trail root
    move fork-points forward rather than from trail end?
    coordinate with full frontier to save any trail that is non-dominated, regardless of current scalarization
go from facie to oriented cubie representation
add permutation result of macros to macro database, maybe in cube-specific subclass (also with init solved function)
replace actions with action indexes in cube domain
replace actions with action indexes in macro database
prefix tree refs:
    http://dx.doi.org/10.1109/GrC.2012.6468626
    http://hanj.cs.illinois.edu/pdf/dami04_fptree.pdf
    https://sigir.org/sigir2021/ (on AAAI shortlist)
    https://arxiv.org/ftp/arxiv/papers/1007/1007.0085.pdf (mainly for refs)
    https://www.kdd.org/kdd2021/ (on AAAI shortlist)

DONE algorithm with mdb
DONE copy macro database
DONE rewindable prefix macro database
DONE speed test for macro database vs brute query (two orders of magnitude faster at 1000 rules)
DONE "system" test for macro database add rule: must match brute query result
